apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-dns
  namespace: cert-manager
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: niko.raes@gmail.com
    privateKeySecretRef:
      name: letsencrypt-dns-key
    solvers:
      - selector:
          dnsZones:
            - konnektr.io
        dns01:
          webhook:
            groupName: acme.konnektr.io
            solverName: porkbun
            config:
              apiKeySecretRef:
                name: porkbun-secret
                key: APIKEY
              secretKeySecretRef:
                name: porkbun-secret
                key: SECRETAPIKEY
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: porkbun-secret:reader
  namespace: cert-manager
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["porkbun-secret"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: porkbun-webhook:secret-reader
  namespace: cert-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: porkbun-secret:reader
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: porkbun-webhook
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: porkbun-secret:reader
  namespace: cert-manager
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["porkbun-secret"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: porkbun-webhook:secret-reader
  namespace: cert-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: porkbun-secret:reader
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: porkbun-webhook
    namespace: cert-manager
